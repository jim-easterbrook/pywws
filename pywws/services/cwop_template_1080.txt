#! pywws - Python software for USB Wireless Weather Stations                       #
#! http://github.com/jim-easterbrook/pywws                                         #
#! Copyright (C) 2008-13  Jim Easterbrook  jim@jim-easterbrook.me.uk               #
#!                                                                                 #
#! This program is free software; you can redistribute it and/or                   #
#! modify it under the terms of the GNU General Public License                     #
#! as published by the Free Software Foundation; either version 2                  #
#! of the License, or (at your option) any later version.                          #
#!                                                                                 #
#! This program is distributed in the hope that it will be useful,                 #
#! but WITHOUT ANY WARRANTY; without even the implied warranty of                  #
#! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                   #
#! GNU General Public License for more details.                                    #
#!                                                                                 #
#! You should have received a copy of the GNU General Public License               #
#! along with this program; if not, write to the Free Software                     #
#! Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. #
#!
#! Author: Marco Trevisan <mail@3v1n0.net>

#! These rules follows the APRS protocol (http://is.gd/APRSProtocol), to define
#! command lines that can be sent to the CWOP servers.
#! Every line is added as a list entry of the APRS_PACKETS and they will be
#! sent to the server.
#live#
{
"APRS_PACKETS":
[
#calc "'\"'"
#calc "data['idx'].strftime('@%d%H%Mz') if location_is_set() else data['idx'].strftime('_%m%d%H%M')"
#calc "latitude_loran(local_data['latitude'])"
#calc "'/' if location_is_set() else ''"
#calc "longitude_loran(local_data['longitude'])"
#calc "'_' if location_is_set() else 'c'"
#wind_dir "%03d" "..." "max_dec_length(winddir_degrees(x), 3)"#
#calc "'/' if location_is_set() else 's'"
#wind_ave "%03d" "..." "max_dec_length(wind_mph(x), 3)"#
#wind_gust "g%03d" "g..." "max_dec_length(wind_mph(x), 3)"#
#calc "temp_f(data['temp_out'])" "t%03d" "t..." "max_dec_length(x, 3) if x > 0 else max_dec_length(x, 2)"#
#calc "rain_inch(rain_hour(data)) * 100" "r%03d" "r..." "max_dec_length(x, 3)"#
#calc "rain_inch(rain_24(data)) * 100" "p%03d" "p..." "max_dec_length(x, 3)"#
#calc "rain_inch(rain_day(data)) * 100" "P%03d" "P..." "max_dec_length(x, 3)"#
#hum_out "h%02d" "" "x % 100" "h.."#
#rel_pressure "b%05d" "b......" "max_dec_length(x * 10, 5)"#
#calc "'pywws' if not location_is_set() else '.pywws-WH1080'"
#altitude " /A=%06d" "" "max_dec_length(altitude_feet(x), 6)"#
#calc "'\"'"
]
}
